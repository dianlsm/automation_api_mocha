{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2024-09-17T09:42:46.203Z",
    "end": "2024-09-17T09:42:49.011Z",
    "duration": 2808,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9ab07908-ae5e-4205-999c-d180504d6698",
      "title": "",
      "fullFile": "D:\\Code\\qa\\automation_api_mocha\\users.js",
      "file": "\\users.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7b873897-b701-4fa5-80c6-9fedd550510d",
          "title": "POST /login and use token for adding user",
          "fullFile": "D:\\Code\\qa\\automation_api_mocha\\users.js",
          "file": "\\users.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login dengan email dan password yang valid",
              "fullTitle": "POST /login and use token for adding user Login dengan email dan password yang valid",
              "timedOut": false,
              "duration": 1299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl).post(\"/authentications\").send({\n  email: \"switch@yopmail.com\",\n  password: \"switch@123\",\n});\n// Verifikasi response dari login\nexpect(response.status).to.equal(201);\nexpect(response.body).to.have.property(\n  \"message\",\n  \"Authentication berhasil ditambahkan\"\n);\nexpect(response.status).to.equal(201);\nexpect(response.body).to.have.property(\"status\", \"success\");\nexpect(response.body).to.have.property(\n  \"message\",\n  \"Authentication berhasil ditambahkan\"\n);\nexpect(response.body).to.have.property(\"data\");\n// Simpan token untuk digunakan di request berikutnya\naccessToken = response.body.data.accessToken;",
              "err": {},
              "uuid": "9250d252-8828-491a-a653-c64c04cd306c",
              "parentUUID": "7b873897-b701-4fa5-80c6-9fedd550510d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Menambahkan pengguna baru dengan data yang valid",
              "fullTitle": "POST /login and use token for adding user Menambahkan pengguna baru dengan data yang valid",
              "timedOut": false,
              "duration": 871,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const addUserResponse = await request(baseUrl)\n  .post(\"/users\") // Endpoint untuk menambah user\n  .set(\"Authorization\", `Bearer ${accessToken}`) // Set token di header\n  .send({\n    name: \"user46\",\n    email: \"user46@yopmail.com\",\n    password: \"user46\",\n  });\n// Verifikasi response dari permintaan add user\nexpect(addUserResponse.status).to.equal(201);\nexpect(addUserResponse.body).to.have.property(\"status\", \"success\");\nexpect(addUserResponse.body).to.have.property(\n  \"message\",\n  \"User berhasil ditambahkan\"\n);\nexpect(addUserResponse.body.data).to.have.property(\"name\", \"user46\"); // Cek ID user yang ditambahkan",
              "err": {},
              "uuid": "caddf32c-790e-450c-b85a-e3b8af69896f",
              "parentUUID": "7b873897-b701-4fa5-80c6-9fedd550510d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Menambahkan pengguna yang sudah ditambahkan",
              "fullTitle": "POST /login and use token for adding user Menambahkan pengguna yang sudah ditambahkan",
              "timedOut": false,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const addUserResponse = await request(baseUrl)\n  .post(\"/users\") // Endpoint untuk menambah user\n  .set(\"Authorization\", `Bearer ${accessToken}`) // Set token di header\n  .send({\n    name: \"user41\",\n    email: \"user41@yopmail.com\",\n    password: \"user41\",\n  });\n// Verifikasi response dari permintaan add user\nexpect(addUserResponse.status).to.equal(400);\nexpect(addUserResponse.body).to.have.property(\"status\", \"fail\");\nexpect(addUserResponse.body).to.have.property(\n  \"message\",\n  \"Email sudah digunakan\"\n);",
              "err": {},
              "uuid": "44d7bd03-59df-4697-8bf1-402e607db1c8",
              "parentUUID": "7b873897-b701-4fa5-80c6-9fedd550510d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Menampilkan semua data user",
              "fullTitle": "POST /login and use token for adding user Menampilkan semua data user",
              "timedOut": false,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const getUsersResponse = await request(baseUrl)\n  .get(\"/users\") // Endpoint untuk menambah user\n  .set(\"Authorization\", `Bearer ${accessToken}`); // Set token di header\n// Verifikasi response dari permintaan add user\nexpect(getUsersResponse.status).to.equal(200);\nexpect(getUsersResponse.body).to.have.property(\"status\", \"success\");",
              "err": {},
              "uuid": "7ce4eaa0-dac7-489a-8566-3775df1e35de",
              "parentUUID": "7b873897-b701-4fa5-80c6-9fedd550510d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Menampilkan detail user",
              "fullTitle": "POST /login and use token for adding user Menampilkan detail user",
              "timedOut": false,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userId = \"15e3663c-02f3-4ebd-953f-a408c74d12da\";\n// Menggunakan template literal dengan benar di URL endpoint\nconst getUsersResponse = await request(baseUrl)\n  .get(`/users/${userId}`) // Endpoint untuk menampilkan detail user\n  .set(\"Authorization\", `Bearer ${accessToken}`); // Set token di header\n// Verifikasi response dari permintaan detail user\nexpect(getUsersResponse.status).to.equal(200); // Pastikan status 200 (OK)\nexpect(getUsersResponse.body).to.have.property(\"status\", \"success\"); // Verifikasi status \"success\"\nexpect(getUsersResponse.body).to.have.property(\"data\"); // Verifikasi bahwa ada data yang dikembalikan\nexpect(getUsersResponse.body.data.user).to.have.property(\"name\", \"user28\"); // Verifikasi ID user",
              "err": {},
              "uuid": "5e70c27f-ff15-4556-8d43-906d0abddfd5",
              "parentUUID": "7b873897-b701-4fa5-80c6-9fedd550510d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9250d252-8828-491a-a653-c64c04cd306c",
            "caddf32c-790e-450c-b85a-e3b8af69896f",
            "44d7bd03-59df-4697-8bf1-402e607db1c8",
            "7ce4eaa0-dac7-489a-8566-3775df1e35de",
            "5e70c27f-ff15-4556-8d43-906d0abddfd5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2790,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}