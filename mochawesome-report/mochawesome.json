{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2024-09-18T06:32:39.847Z",
    "end": "2024-09-18T06:32:45.404Z",
    "duration": 5557,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dfd71bbc-0258-4628-9bdd-e3e7423595b3",
      "title": "",
      "fullFile": "D:\\Code\\qa\\automation_api_mocha\\users.js",
      "file": "\\users.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eef13ec8-cfee-45a0-85d7-828419fa9d6a",
          "title": "Test Suite Users",
          "fullFile": "D:\\Code\\qa\\automation_api_mocha\\users.js",
          "file": "\\users.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Sukses login dengan email dan password yang valid",
              "fullTitle": "Test Suite Users Sukses login dengan email dan password yang valid",
              "timedOut": false,
              "duration": 1947,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(baseUrl).post(\"/authentications\").send({\n  email: \"switch@yopmail.com\",\n  password: \"switch@123\",\n});\nexpect(response.status).to.equal(201);\nexpect(response.body).to.have.property(\"status\", \"success\");\nexpect(response.body).to.have.property(\n  \"message\",\n  \"Authentication berhasil ditambahkan\"\n);\nexpect(response.body).to.have.property(\"data\");\naccessToken = response.body.data.accessToken;",
              "err": {},
              "uuid": "c83f02b8-d0fa-485c-92ba-c3ac4309f831",
              "parentUUID": "eef13ec8-cfee-45a0-85d7-828419fa9d6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sukses menambahkan user baru",
              "fullTitle": "Test Suite Users Sukses menambahkan user baru",
              "timedOut": false,
              "duration": 921,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const addUserResponse = await request(baseUrl)\n  .post(\"/users\")\n  .set(\"Authorization\", `Bearer ${accessToken}`)\n  .send({\n    name: \"user53\",\n    email: \"user53@yopmail.com\",\n    password: \"user53\",\n  });\nexpect(addUserResponse.status).to.equal(201);\nexpect(addUserResponse.body).to.have.property(\"status\", \"success\");\nexpect(addUserResponse.body).to.have.property(\n  \"message\",\n  \"User berhasil ditambahkan\"\n);\nexpect(addUserResponse.body.data).to.have.property(\"name\", \"user53\");",
              "err": {},
              "uuid": "54c9da16-04ca-451d-a237-6d84295a7bc7",
              "parentUUID": "eef13ec8-cfee-45a0-85d7-828419fa9d6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Gagal menambahkan user yang sudah ditambahkan",
              "fullTitle": "Test Suite Users Gagal menambahkan user yang sudah ditambahkan",
              "timedOut": false,
              "duration": 494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const addUserResponse = await request(baseUrl)\n  .post(\"/users\")\n  .set(\"Authorization\", `Bearer ${accessToken}`)\n  .send({\n    name: \"user49\",\n    email: \"user49@yopmail.com\",\n    password: \"user49\",\n  });\nexpect(addUserResponse.status).to.equal(400);\nexpect(addUserResponse.body).to.have.property(\"status\", \"fail\");\nexpect(addUserResponse.body).to.have.property(\n  \"message\",\n  \"Email sudah digunakan\"\n);",
              "err": {},
              "uuid": "a82cbeeb-accb-4e3e-b83e-bd99308bdd19",
              "parentUUID": "eef13ec8-cfee-45a0-85d7-828419fa9d6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sukses menampilkan semua data user",
              "fullTitle": "Test Suite Users Sukses menampilkan semua data user",
              "timedOut": false,
              "duration": 399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const getUsersResponse = await request(baseUrl)\n  .get(\"/users\")\n  .set(\"Authorization\", `Bearer ${accessToken}`);\nexpect(getUsersResponse.status).to.equal(200);\nexpect(getUsersResponse.body).to.have.property(\"status\", \"success\");\nexpect(getUsersResponse.body.data.meta).to.have.property(\"total\", \"26\");",
              "err": {},
              "uuid": "6f79ae52-4c79-42b8-8439-d76ea05ad186",
              "parentUUID": "eef13ec8-cfee-45a0-85d7-828419fa9d6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sukses menampilkan detail user",
              "fullTitle": "Test Suite Users Sukses menampilkan detail user",
              "timedOut": false,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userId = \"15e3663c-02f3-4ebd-953f-a408c74d12da\";\nconst getUsersResponse = await request(baseUrl)\n  .get(`/users/${userId}`)\n  .set(\"Authorization\", `Bearer ${accessToken}`);\nexpect(getUsersResponse.status).to.equal(200);\nexpect(getUsersResponse.body).to.have.property(\"status\", \"success\");\nexpect(getUsersResponse.body).to.have.property(\"data\");\nexpect(getUsersResponse.body.data.user).to.have.property(\"name\", \"user28\");",
              "err": {},
              "uuid": "5d44a4b8-a117-4dc2-b22c-8e1869fdb30d",
              "parentUUID": "eef13ec8-cfee-45a0-85d7-828419fa9d6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sukses menghapus user",
              "fullTitle": "Test Suite Users Sukses menghapus user",
              "timedOut": false,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userId = \"0e06bf77-8b9f-4c19-bdf5-2a6ec73079f8\";\nconst getUsersResponse = await request(baseUrl)\n  .delete(`/users/${userId}`)\n  .set(\"Authorization\", `Bearer ${accessToken}`);\nexpect(getUsersResponse.status).to.equal(200);\nexpect(getUsersResponse.body).to.have.property(\"status\", \"success\");\nexpect(getUsersResponse.body).to.have.property(\n  \"message\",\n  \"User berhasil dihapus\"\n);",
              "err": {},
              "uuid": "5025795b-26bb-4cc4-84ec-eeace8ad114d",
              "parentUUID": "eef13ec8-cfee-45a0-85d7-828419fa9d6a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sukses mengupdate user",
              "fullTitle": "Test Suite Users Sukses mengupdate user",
              "timedOut": false,
              "duration": 1189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userId = \"7be3f795-a425-42fe-88b2-a66cb2aa4a8c\";\nconst getUsersResponse = await request(baseUrl)\n  .put(`/users/${userId}`)\n  .set(\"Authorization\", `Bearer ${accessToken}`)\n  .send({\n    name: \"user edited\",\n    email: \"user01@yopmail.com\",\n  });\nexpect(getUsersResponse.status).to.equal(200);\nexpect(getUsersResponse.body).to.have.property(\"status\", \"success\");\nexpect(getUsersResponse.body).to.have.property(\n  \"message\",\n  \"User berhasil diupdate\"\n);\nexpect(getUsersResponse.body.data).to.have.property(\"name\", \"user edited\");",
              "err": {},
              "uuid": "45ddff7f-548c-4c07-b815-bcece8c6956f",
              "parentUUID": "eef13ec8-cfee-45a0-85d7-828419fa9d6a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c83f02b8-d0fa-485c-92ba-c3ac4309f831",
            "54c9da16-04ca-451d-a237-6d84295a7bc7",
            "a82cbeeb-accb-4e3e-b83e-bd99308bdd19",
            "6f79ae52-4c79-42b8-8439-d76ea05ad186",
            "5d44a4b8-a117-4dc2-b22c-8e1869fdb30d",
            "5025795b-26bb-4cc4-84ec-eeace8ad114d",
            "45ddff7f-548c-4c07-b815-bcece8c6956f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5545,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}